{"version":3,"sources":["Page.tsx","PageTitle.tsx","Styles.ts","user.svg","Recipe.tsx","RecipeList.tsx","RecipeData.ts","HomePage.tsx","SearchRecipePage.tsx","SignInPage.tsx","NotFoundPage.tsx","Comment.tsx","CommentList.tsx","RecipePage.tsx","Icons.tsx","Header.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Page","title","children","css","PageTitle","styled","h2","white1","white2","white3","gray5","gray6","accent2","fontFamily","fontSizeSmall","fontSizeMedium","backgroundColour1","backgroundColour2","Pre","pre","Line","div","LineNo","span","LineContent","AddRecipeButton","button","module","exports","Recipe","data","showDescription","to","id","name","author","description","length","substring","RecipeList","renderItem","map","recipe","key","recipes","code","language","comments","commentId","comment","created","Date","getRecipes","a","wait","durationInMs","Promise","resolve","setTimeout","getRecipe","recipeId","results","filter","r","searchRecipes","criteria","q","toLowerCase","indexOf","HomePage","history","useState","setRecipes","recipesLoading","setRecipesLoading","useEffect","onClick","push","SearchRecipePage","location","setRecipe","search","URLSearchParams","get","foundResults","searchForIt","SignInPage","NotFoundPage","Comment","toLocaleDateString","toLocaleTimeString","CommentList","RecipePage","match","doGetRecipe","recipeFound","params","Number","defaultProps","theme","dracula","trim","className","style","tokens","getLineProps","getTokenProps","line","i","token","UserIcon","src","user","alt","RoutingHeader","withRouter","searchCriteria","setSearchCriteria","type","placeholder","value","onChange","e","console","log","currentTarget","AddRecipePage","lazy","App","pathname","useLocation","from","slice","exact","path","component","fallback","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.90b1bcbe.chunk.js","sourcesContent":["/** @jsx jsx */\r\nimport { FC } from 'react';\r\nimport { css, jsx } from '@emotion/core';\r\nimport { PageTitle } from './PageTitle';\r\n\r\n\r\ninterface Props {\r\n    title?: string;\r\n}\r\n\r\nexport const Page: FC<Props> = ({ title, children }) => (\r\n    <div\r\n        css={css`\r\n            margin: 50px auto 20px auto;\r\n            padding: 30px 20px;\r\n            max-width: 600px;\r\n        `}\r\n        >\r\n        { title && <PageTitle>{title}</PageTitle>}\r\n        {children}\r\n        </div>\r\n);\r\n","import styled from '@emotion/styled';\r\n\r\n\r\n\r\nexport const PageTitle = styled.h2`\r\n  font-size: 15px;\r\n  font-weight: bold;\r\n  margin: 10px 0px 5px;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n`;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const white1 = '#FFFFFF';\r\nexport const white2 = '#B9B6B8';\r\nexport const white3 = '#b9b6b8';\r\nexport const gray4 = '#b9b9b9';\r\nexport const gray5 = '#e3e2e2';\r\nexport const gray6 = '#f7f8fa';\r\nexport const primary1 = '#B1D076';\r\nexport const primary2 = '#99C24D';\r\nexport const accent1 = '#dbb365';\r\nexport const accent2 = '#048ba8';\r\nexport const fontFamily = \"'Segoe UI', 'Helvetica Neue',sans-serif\";\r\nexport const fontSizeTiny = '12px';\r\nexport const fontSizeSmall = '16px';\r\nexport const fontSizeMedium = '24px';\r\n\r\nexport const backgroundColour1 = '#1C2835';\r\nexport const backgroundColour2 = '#2F2D2E';\r\n\r\nexport const Pre = styled.pre`\r\n  text-align: left;\r\n  margin: 1em 0;\r\n  padding: 0.5em;\r\n  overflow: auto;\r\n  font: ${fontSizeSmall};\r\n`;\r\n\r\nexport const Line = styled.div`\r\n  display: table-row;\r\n`;\r\n\r\nexport const LineNo = styled.span`\r\n  display: table-cell;\r\n  text-align: right;\r\n  padding-right: 1em;\r\n  user-select: none;\r\n  opacity: 0.5;\r\n`;\r\n\r\nexport const LineContent = styled.span`\r\n  display: table-cell;\r\n`;\r\n\r\nexport const AddRecipeButton = styled.button`\r\n    background-color: ${primary2};\r\n    border-color: ${primary2};\r\n    border-style: solid;\r\n    border-radius: 5px;\r\n    font-family: ${fontFamily};\r\n    font-size: ${fontSizeSmall};\r\n    padding: 5px 10px;\r\n    color: ${white1};\r\n    cursor: pointer;\r\n        :hover\r\n        {\r\n            background-color: ${primary1};\r\n        }\r\n        :focus\r\n        {\r\n            outline-color: ${primary2};\r\n        }\r\n        :disabled\r\n        {\r\n            opacity: 0.5;\r\n            cursor: not-allowed;\r\n        }`;","module.exports = __webpack_public_path__ + \"static/media/user.e6aaf430.svg\";","/** @jsx jsx */\r\nimport { FC } from 'react';\r\nimport { css, jsx } from '@emotion/core';\r\nimport { RecipeData } from './RecipeData';\r\nimport { white2, white3 } from './Styles';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Props {\r\n  data: RecipeData;\r\n  showDescription?: boolean;\r\n}\r\n\r\nexport const Recipe: FC<Props> = ({ data, showDescription = true }) => (\r\n  <div\r\n    css={css`\r\n      padding: 10px 0px;\r\n    `}\r\n  >\r\n    {' '}\r\n    <div\r\n      css={css`\r\n        padding: 10px 0px;\r\n        font-size: 19px;\r\n      `}\r\n    >\r\n      <Link\r\n        css={css`\r\n          text-decoration: none;\r\n          color: ${white2};\r\n        `}\r\n        to={`/recipes/${data.id}`}\r\n        >\r\n      {data.name}\r\n      </Link>\r\n    </div>{' '}\r\n    <div\r\n      css={css`\r\n        font-size: 12px;\r\n        font-style: italic;\r\n        color: ${white3};\r\n      `}\r\n    >\r\n      {' '}\r\n      { data.author && `By ${data.author}`}\r\n      {' '}\r\n    </div>\r\n    { showDescription && (\r\n        <div\r\n          css={css`\r\n            padding-bottom: 10px;\r\n            font-size: 10px;\r\n            font-style: normal;\r\n            color: ${white2};\r\n          `}\r\n        >\r\n          {data.description.length > 50 ? `${data.description.substring(0, 50)}...`\r\n            : data.description}\r\n\r\n        </div>\r\n\r\n    )}\r\n  </div>\r\n);\r\n","/** @jsx jsx */\r\nimport { FC } from 'react';\r\nimport { css, jsx } from '@emotion/core';\r\nimport { gray5, accent2, backgroundColour2 } from './Styles';\r\nimport { RecipeData } from './RecipeData';\r\nimport { Recipe } from './Recipe';\r\n\r\ninterface Props {\r\n    data: RecipeData[];\r\n    renderItem?: (item: RecipeData) => JSX.Element;\r\n}\r\n\r\nexport const RecipeList: FC<Props> =({data, renderItem}) => {\r\n    return (\r\n    <ul\r\n        css={css`\r\n            list-style: none;\r\n            margin: 10px 0 0 0 ;\r\n            padding: 0px 20px;\r\n            background-color: ${backgroundColour2};\r\n            border-bottom-left-radius: 4px;\r\n            border-bottom-right-radius: 4px;\r\n            border-top: 3px solid ${accent2};\r\n            box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\r\n        `}\r\n    >\r\n        { data.map(recipe => (\r\n        <li\r\n            css={css`\r\n                border-top: 1px solid ${gray5};\r\n                :first-of-type {\r\n                    border-top: none;\r\n                }\r\n            `}\r\n            key = {recipe.id}\r\n        >\r\n            {\r\n                renderItem ? renderItem(recipe) :\r\n                <Recipe data={recipe}\r\n                css={css`\r\n                    border-top: 1px solid ${gray5};\r\n                    :first-of-type {\r\n                    border-top: none;\r\n                    }\r\n            `}/>}\r\n        </li>\r\n        ))}\r\n    </ul>\r\n);\r\n};","import { Language } from 'prism-react-renderer';\r\n\r\nexport interface CommentData {\r\n  commentId: number;\r\n  comment?: string;\r\n  created: Date;\r\n}\r\n\r\nexport interface RecipeData {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  code: string;\r\n  author?: string;\r\n  language: Language;\r\n  comments: CommentData[];\r\n}\r\n\r\nconst recipes: RecipeData[] = [\r\n  {\r\n    id: 1,\r\n    name: 'Emulating Switch/Case Statements With Dicts',\r\n    description: `Python doesn’t have switch/case statements so it’s sometimes necessary\r\n                  to write long if…elif…else chains as a workaround.\r\n\r\n                  One way to deal with long if…elif…else statements is to replace\r\n                  them with dictionary lookup tables that emulate the behavior of\r\n                  switch/case statements.\r\n                  `,\r\n    code: `def dispatch_dict(operator, x, y):\r\n  return {\r\n    'add': lambda: x + y,\r\n    'sub': lambda: x - y,\r\n    'mul': lambda: x * y,\r\n    'div': lambda: x / y,\r\n  }.get(operator, lambda: None)()`,\r\n    language: 'python',\r\n    author: 'Dan Bader, Python Tricks: The Book',\r\n    comments: [\r\n      {\r\n        commentId: 1,\r\n        comment: '',\r\n        created: new Date(),\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Reversing a string',\r\n    description: `This snippet came from a code kata to reverse a string in Typescript using the spread operator.`,\r\n    code: `function reverse(value: string): string {\r\n    return [...value].reverse().join('');\r\n}`,\r\n    language: 'typescript',\r\n    comments: [\r\n      {\r\n        commentId: 1,\r\n        comment: 'The spread operator requires es6 or es2015.',\r\n        created: new Date(),\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport const getRecipes = async (): Promise<RecipeData[]> => {\r\n  await wait(1000);\r\n  return recipes;\r\n};\r\n\r\nconst wait = (durationInMs: number): Promise<void> => {\r\n  return new Promise((resolve) => setTimeout(resolve, durationInMs));\r\n};\r\n\r\nexport const getRecipe = async (\r\n  recipeId: number,\r\n): Promise<RecipeData | null> => {\r\n  await wait(500);\r\n  const results = recipes.filter((r) => r.id === recipeId);\r\n  return results.length === 0 ? null : results[0];\r\n};\r\n\r\nexport const searchRecipes = async (\r\n  criteria: string,\r\n): Promise<RecipeData[]> => {\r\n  await wait(800);\r\n  return recipes.filter(\r\n    q =>\r\n      q.language.toLowerCase().indexOf(criteria.toLowerCase()) >=\r\n        0 ||\r\n      q.description.toLowerCase().indexOf(criteria.toLowerCase()) >=\r\n        0\r\n  );\r\n};","/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core';\r\nimport { AddRecipeButton } from './Styles';\r\nimport { RecipeList } from './RecipeList';\r\nimport { getRecipes, RecipeData } from './RecipeData';\r\nimport { Page } from './Page';\r\nimport { PageTitle } from './PageTitle';\r\nimport { useEffect, useState, FC } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nexport const HomePage:FC<RouteComponentProps> = ({history}) => {\r\n  const [recipes, setRecipes]\r\n    = useState<RecipeData[] | null>(null);\r\n\r\n  const [recipesLoading, setRecipesLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const recipes = await getRecipes();\r\n      setRecipes(recipes);\r\n      setRecipesLoading(false);\r\n    })();\r\n  }, []);\r\n\r\n  const handleAddRecipeClick = () => {\r\n    history.push('/recipes/add');\r\n  };\r\n  return (\r\n  <Page>\r\n      <div\r\n          css={css`\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: space-between;\r\n          `}\r\n      >\r\n      <PageTitle>Recipes</PageTitle>\r\n      <AddRecipeButton onClick={handleAddRecipeClick}>Add Recipe</AddRecipeButton>\r\n\r\n      </div>\r\n\r\n    {\r\n      recipesLoading ? (\r\n        <div\r\n          css={css`\r\n                font-size: 18px;\r\n                font-style: italic;\r\n              `}>\r\n            Loading awesome code recipes...\r\n        </div>\r\n      ) : (\r\n        <RecipeList data={ recipes || [] }/>\r\n      )\r\n    }\r\n\r\n  </Page>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core';\r\nimport { FC, useState, useEffect } from 'react';\r\nimport { Page } from './Page';\r\n\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { RecipeList } from './RecipeList';\r\nimport { searchRecipes, RecipeData } from './RecipeData';\r\n\r\nexport const SearchRecipePage: React.FC<RouteComponentProps> = ({ location, }) => {\r\n  const [recipes, setRecipe] = useState<RecipeData[]>([]);\r\n\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const search = searchParams.get('criteria') || '';\r\n\r\n  useEffect(() => {\r\n    const searchForIt = async (criteria: string) => {\r\n      const foundResults = await searchRecipes(criteria);\r\n      setRecipe(foundResults);\r\n    };\r\n    searchForIt(search);\r\n  }, [search]);\r\n\r\n  return (\r\n    <Page title=\"Search Results\">\r\n      {search && (\r\n        <p\r\n          css={css`\r\n            font-size: 16px;\r\n            font-style: italic;\r\n            margin-top: 0px;\r\n          `}\r\n        >\r\n          for \"{search}\"\r\n        </p>\r\n      )}\r\n      <RecipeList data={recipes} />\r\n\r\n    </Page>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { Page } from './Page';\r\n\r\n\r\nexport const SignInPage = () => <Page title=\"Sign In\" />;","import React from 'react';\r\nimport { Page } from './Page';\r\n\r\nexport const NotFoundPage = () => <Page title=\"Page Not Found\" />;","/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core';\r\nimport { CommentData } from './RecipeData';\r\nimport { white3 } from './Styles';\r\nimport { FC } from 'react';\r\n\r\ninterface Props {\r\n    data: CommentData;\r\n}\r\n\r\n\r\nexport const Comment: FC<Props> = ({ data }) => (\r\n    <div\r\n        css={css`\r\n         padding: 14px 0px;\r\n        `}\r\n    >\r\n        <div\r\n            css={css`\r\n                padding: 14px 0px;\r\n                font-size: 13px;\r\n            `}\r\n        >\r\n            {data.comment}\r\n        </div>\r\n        <div\r\n            css={css`\r\n                font-size: 12px;\r\n                font-style: italic;\r\n                color: ${white3};\r\n            `}\r\n        >\r\n\r\n        {data.comment && `${data.created.toLocaleDateString()} ${data.created.toLocaleTimeString()}`}\r\n      </div>\r\n    </div>\r\n);","/** @jsx jsx */\r\nimport { FC } from 'react';\r\nimport { css, jsx } from '@emotion/core';\r\nimport { Comment } from './Comment';\r\nimport { gray5 } from './Styles';\r\nimport { CommentData } from './RecipeData';\r\n\r\ninterface Props {\r\n  data: CommentData[];\r\n}\r\n\r\nexport const CommentList: FC<Props> = ({ data }) => (\r\n  <ul\r\n    css={css`\r\n      list-style: none;\r\n      margin: 10px 0 0 0;\r\n      padding: 0;\r\n    `}\r\n  >\r\n    {' '}\r\n    {data.map((comment) => (\r\n      <li\r\n        css={css`\r\n          border-top: 1px solid ${gray5};\r\n        `}\r\n        key={comment.commentId}\r\n      >\r\n        {' '}\r\n        <Comment data={comment} />{' '}\r\n      </li>\r\n    ))}{' '}\r\n  </ul>\r\n);\r\n","/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core';\r\nimport { white3, gray6, backgroundColour2, Line, LineNo, LineContent, Pre } from './Styles';\r\nimport { FC, useState, Fragment, useEffect } from 'react';\r\nimport { Page } from './Page';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { RecipeData, getRecipe } from './RecipeData';\r\nimport { CommentList } from './CommentList';\r\nimport Highlight, { defaultProps } from 'prism-react-renderer';\r\nimport dracula from 'prism-react-renderer/themes/dracula';\r\n\r\n\r\ninterface RouteParams {\r\n  recipeId: string;\r\n}\r\n\r\nexport const RecipePage: FC<RouteComponentProps<RouteParams>> = ({ match }) => {\r\n  const [recipe, setRecipe] = useState<RecipeData | null>(null);\r\n\r\n  useEffect(() => {\r\n    const doGetRecipe = async (recipeId: number) => {\r\n      const recipeFound = await getRecipe(recipeId);\r\n      setRecipe(recipeFound);\r\n    };\r\n    if (match.params.recipeId) {\r\n      const recipeId = Number(match.params.recipeId);\r\n      doGetRecipe(recipeId);\r\n    }\r\n  }, [match.params.recipeId]);\r\n\r\n  return (\r\n    <Page>\r\n      <div\r\n        css={css`\r\n          background-color: ${backgroundColour2};\r\n          padding: 15px 20px 20px 20px;\r\n          border-radius: 4px;\r\n          border: 1px solid ${gray6};\r\n          box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\r\n        `}\r\n      >\r\n        <div\r\n          css={css`\r\n            font-size: 19px;\r\n            font-weight: bold;\r\n            margin: 10px 0px 5px;\r\n            color: ${white3};\r\n          `}\r\n        >\r\n          {recipe === null ? '' : recipe.name}\r\n        </div>\r\n\r\n        {recipe !== null && (\r\n          <Fragment>\r\n            <p\r\n              css={css`\r\n                margin-top: 0px;\r\n                background-color: ${backgroundColour2};\r\n              `}\r\n            >\r\n              {recipe?.description}\r\n            </p>\r\n            <div\r\n              css={css`\r\n                font-size: 12px;\r\n                font-style: italic;\r\n                color: ${white3};\r\n              `}\r\n            >\r\n              {`From ${recipe.author}`}\r\n            </div>\r\n            <Highlight {...defaultProps} theme={dracula} code={`${recipe.code.trim()}`} language={recipe.language} >\r\n              {({ className, style, tokens, getLineProps, getTokenProps }) => (\r\n                <Pre className={className} style={style}>\r\n                  {tokens.map((line, i) => (\r\n                    <Line key={i} {...getLineProps({ line, key: i })}>\r\n                      <LineNo>{i + 1}</LineNo>\r\n                      <LineContent>\r\n                        {line.map((token, key) => (\r\n                          <span key={key} {...getTokenProps({ token, key })} />\r\n                        ))}\r\n                      </LineContent>\r\n                    </Line>\r\n                  ))}\r\n                </Pre>\r\n              )}\r\n            </Highlight>\r\n\r\n            <CommentList data={recipe.comments} />\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n    </Page>\r\n  );\r\n};\r\n","/** @jsx jsx */\r\nimport user from './user.svg';\r\nimport { css, jsx } from '@emotion/core';\r\n\r\nexport const UserIcon = () => (\r\n  <img\r\n    src={user}\r\n    alt=\"User\"\r\n    css={css`\r\n      width: 12px;\r\n      opacity: 0.6;\r\n      margin-left: 10px;\r\n    `}\r\n  />\r\n);\r\n","/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core';\r\nimport {\r\n  fontFamily,\r\n  fontSizeMedium,\r\n  white2,\r\n  white1,\r\n  gray5,\r\n  backgroundColour1,\r\n  fontSizeSmall,\r\n} from './Styles';\r\nimport { UserIcon } from './Icons';\r\nimport { ChangeEvent, FC, useState } from 'react';\r\nimport { Link, RouteComponentProps, withRouter } from 'react-router-dom';\r\n\r\n\r\nexport const Header:FC<RouteComponentProps> = (\r\n  { history, location}\r\n) => {\r\n  const searchParameters = new URLSearchParams(location.search);\r\n  const criteria = searchParameters.get('criteria') || '';\r\n  const [searchCriteria, setSearchCriteria] = useState(criteria);\r\n\r\n\r\n  const handleSearchInputChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    console.log(e.currentTarget.value);\r\n    setSearchCriteria(e.currentTarget.value);\r\n  };\r\n  return (\r\n    <div\r\n      css={css`\r\n        position: fixed;\r\n        box-sizing: border-box;\r\n        top: 0;\r\n        width: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        padding: 10px 20px;\r\n        background-color: ${backgroundColour1};\r\n        border-bottom: 1px solid ${gray5};\r\n        box-shadow: 0 3px 7px 0 rgba(110, 112, 114, 0.21);\r\n      `}\r\n    >\r\n      <Link\r\n        to=\"/recipes\"\r\n        css={css`\r\n          @media screen and (max-width: 405px) {\r\n            .recipe-size {\r\n              font-size: ${fontSizeSmall};\r\n            }\r\n          }\r\n          @media screen and (min-width: 406px) {\r\n            .recipe-size {\r\n              font-size: ${fontSizeMedium};\r\n            }\r\n          }\r\n\r\n          font-weight: bold;\r\n          color: ${white1};\r\n          text-decoration: none;\r\n        `}\r\n      >\r\n        <div className=\"recipe-size\">\r\n        Recipes\r\n        </div>\r\n      </Link>{' '}\r\n      <form>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        value={searchCriteria}\r\n        onChange={handleSearchInputChange}\r\n        css={css`\r\n          box-sizing: border-box;\r\n          font-family: ${fontFamily};\r\n          font-size: ${fontSizeMedium};\r\n          padding: 8px 10px;\r\n          border: 1px solid ${gray5};\r\n          border-radius: 3px;\r\n          color: ${white2};\r\n          background-color: white;\r\n          width: 200px;\r\n          height: 30px;\r\n          :focus {\r\n            outline-color: ${gray5};\r\n          }\r\n        `}\r\n      />\r\n      </form>\r\n      <Link\r\n        to=\"/recipes/signin\"\r\n        css={css`\r\n          @media screen and (max-width: 405px) {\r\n            .hide-mobile {\r\n              display: none !important;\r\n            }\r\n          }\r\n          font-family: ${fontFamily};\r\n          font-size: ${fontSizeSmall};\r\n          padding: 5px 10px;\r\n          background-color: transparent;\r\n          color: ${white2};\r\n          text-decoration: none;\r\n          cursor: pointer;\r\n          span {\r\n            margin-left: 10px;\r\n          }\r\n          :focus {\r\n            outline-color: ${gray5};\r\n          }\r\n        `}\r\n      >\r\n        <UserIcon />\r\n        <div className=\"hide-mobile\">\r\n          <span>Sign In</span>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport const RoutingHeader = withRouter(Header);","/** @jsx jsx */\r\n\r\nimport { HomePage } from './HomePage';\r\nimport { css, jsx } from '@emotion/core';\r\nimport { fontFamily, white2, fontSizeSmall } from './Styles';\r\n\r\nimport { Route, Switch, Redirect, useLocation } from 'react-router-dom';\r\nimport { SearchRecipePage } from './SearchRecipePage';\r\nimport { SignInPage } from './SignInPage';\r\nimport { NotFoundPage } from './NotFoundPage';\r\nimport { RecipePage } from './RecipePage';\r\n\r\nimport { lazy, Suspense } from 'react';\r\n\r\nimport { RoutingHeader as Header } from './Header';\r\n\r\nconst AddRecipePage = lazy(() => import('./AddRecipePage'));\r\n\r\nconst App: React.FC = () => {\r\n  const { pathname } = useLocation();\r\n  return (\r\n\r\n    <div\r\n      css={css`\r\n      font-family: ${fontFamily};\r\n      font-size: ${fontSizeSmall};\r\n      color: ${white2};\r\n    `}\r\n>\r\n      <Header />\r\n      <Switch>\r\n      <Redirect from=\"/:url*(/+)\" to={pathname.slice(0,-1)} />\r\n      <Route exact path=\"/recipes\" component={HomePage} />\r\n      <Route path=\"/recipes/search\" component={SearchRecipePage} />\r\n      <Route path=\"/recipes/add\">\r\n        <Suspense\r\n          fallback={\r\n            <div\r\n              css={css`\r\n                margin-top: 100px;\r\n                text-align: center;\r\n              `}\r\n              >\r\n            Loading...\r\n            </div>\r\n          }\r\n          >\r\n            <AddRecipePage/>\r\n          </Suspense>\r\n      </Route>\r\n      <Route path=\"/recipes/signin\" component={SignInPage} />\r\n      <Route exact path=\"/recipes/:recipeId\" component={RecipePage} />\r\n      <Route component={NotFoundPage} />\r\n      </Switch>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n    <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}